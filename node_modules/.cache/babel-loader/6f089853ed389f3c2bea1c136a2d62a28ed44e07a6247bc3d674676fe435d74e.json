{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\my-app\\\\src\\\\Components\\\\ImageToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js'; // Import tesseract.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageToText(props) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const handleUpClick = () => {\n    setText(text.toUpperCase());\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const imageBase64 = reader.result;\n        const result = await Tesseract.recognize(imageBase64, 'eng');\n        const extractedText = result.data.text;\n\n        // Set the extracted text in the textarea\n        setText(extractedText);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"myBox\",\n      className: \"form-label\",\n      style: {\n        fontSize: '24px',\n        fontWeight: 'bold'\n      },\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"custom-btn primary-btn mx-2 my-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Upper Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageToText, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = ImageToText;\nvar _c;\n$RefreshReg$(_c, \"ImageToText\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","ImageToText","props","_s","text","setText","handleOnChange","event","target","value","handleUpClick","toUpperCase","handleImageUpload","file","files","reader","FileReader","onload","imageBase64","result","recognize","extractedText","data","readAsDataURL","className","children","htmlFor","style","fontSize","fontWeight","heading","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","onClick","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/react/my-app/src/Components/ImageToText.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Tesseract from 'tesseract.js'; // Import tesseract.js\r\n\r\nexport default function ImageToText(props) {\r\n  const [text, setText] = useState(\"\")\r\n\r\n  const handleOnChange = (event) =>{\r\n   setText(event.target.value)\r\n  }\r\n  const handleUpClick = () =>{\r\n   setText(text.toUpperCase())\r\n  }\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    \r\n    if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async () => {\r\n            const imageBase64 = reader.result;\r\n            const result = await Tesseract.recognize(imageBase64, 'eng');\r\n            const extractedText = result.data.text;\r\n            \r\n            // Set the extracted text in the textarea\r\n            setText(extractedText);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n    <label htmlFor=\"myBox\" className=\"form-label\" style={{ fontSize: '24px', fontWeight: 'bold' }}>{props.heading}</label>\r\n    <div className=\"container\">\r\n        <button\r\n            disabled={text.length === 0}\r\n            className=\"custom-btn primary-btn mx-2 my-1\"\r\n            onClick={handleUpClick}\r\n        >\r\n            Convert to Upper Case\r\n        </button>\r\n        <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n            />\r\n    </div>\r\n\r\n</div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,cAAc,GAAIC,KAAK,IAAI;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EACD,MAAMC,aAAa,GAAGA,CAAA,KAAK;IAC1BL,OAAO,CAACD,IAAI,CAACO,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAIL,KAAK,IAAK;IACnC,MAAMM,IAAI,GAAGN,KAAK,CAACC,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC;IAElC,IAAID,IAAI,EAAE;MACN,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,YAAY;QACxB,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAAM;QACjC,MAAMA,MAAM,GAAG,MAAMrB,SAAS,CAACsB,SAAS,CAACF,WAAW,EAAE,KAAK,CAAC;QAC5D,MAAMG,aAAa,GAAGF,MAAM,CAACG,IAAI,CAAClB,IAAI;;QAEtC;QACAC,OAAO,CAACgB,aAAa,CAAC;MAC1B,CAAC;MACDN,MAAM,CAACQ,aAAa,CAACV,IAAI,CAAC;IAC9B;EACF,CAAC;EAED,oBACEb,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC1BzB,OAAA;MAAO0B,OAAO,EAAC,OAAO;MAACF,SAAS,EAAC,YAAY;MAACG,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAJ,QAAA,EAAEvB,KAAK,CAAC4B;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtHlC,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBzB,OAAA;QACImC,QAAQ,EAAE/B,IAAI,CAACgC,MAAM,KAAK,CAAE;QAC5BZ,SAAS,EAAC,kCAAkC;QAC5Ca,OAAO,EAAE3B,aAAc;QAAAe,QAAA,EAC1B;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlC,OAAA;QACQsC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAE5B;MAAkB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEN;AAAC/B,EAAA,CA/CuBF,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}