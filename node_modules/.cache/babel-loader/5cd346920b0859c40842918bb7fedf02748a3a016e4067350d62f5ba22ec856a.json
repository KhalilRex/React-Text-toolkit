{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport * as React from \"react\";\n// import * as ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport { BrowserRouter as Router,\n// Import BrowserRouter with an alias\nRoutes, Route } from \"react-router-dom\"; // Import the necessary components from react-router-dom\nimport TextToQRCode from './Components/TextToQRCode';\nimport MorseCode from './Components/MorseCode';\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#483D8B';\n      document.body.style.color = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert('Dark mode has been enabled', 'success');\n    }\n  };\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","React","About","Navbar","TextForm","Alert","BrowserRouter","Router","Routes","Route","TextToQRCode","MorseCode","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/react/my-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport * as React from \"react\";\n// import * as ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n\nimport {\n  BrowserRouter as Router, // Import BrowserRouter with an alias\n  Routes,\n  Route,\n} from \"react-router-dom\"; // Import the necessary components from react-router-dom\nimport TextToQRCode from './Components/TextToQRCode';\nimport MorseCode from './Components/MorseCode';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#483D8B';\n      document.body.style.color = 'white';\n      showAlert('Light mode has been enabled', 'success')\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black';\n      showAlert('Dark mode has been enabled', 'success')\n    }\n  }\n\n\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B;AACA,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,SACEC,aAAa,IAAIC,MAAM;AAAE;AACzBC,MAAM,EACNC,KAAK,QACA,kBAAkB,CAAC,CAAC;AAC3B,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMkB,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIT,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCV,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCV,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD;EACF,CAAC;AAGH;AAACL,EAAA,CA7BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}