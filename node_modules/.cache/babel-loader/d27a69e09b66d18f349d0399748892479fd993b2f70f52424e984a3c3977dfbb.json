{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\my-app\\\\src\\\\Components\\\\ImageToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageToText() {\n  _s();\n  const [extractedText, setExtractedText] = useState('');\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const imageBase64 = reader.result;\n        const result = await Tesseract.recognize(imageBase64, 'eng');\n        const text = result.data.text;\n        setExtractedText(text);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image to Text Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: event => {\n          setExtractedText('Generating text...');\n          handleImageUpload(event);\n        },\n        children: \"Generate Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Extracted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: extractedText || 'No text extracted'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageToText, \"79YGA2je61Uxaad+bQjG1iNfOK4=\");\n_c = ImageToText;\nvar _c;\n$RefreshReg$(_c, \"ImageToText\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","ImageToText","_s","extractedText","setExtractedText","handleImageUpload","event","file","target","files","reader","FileReader","onload","imageBase64","result","recognize","text","data","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/react/my-app/src/Components/ImageToText.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\n\r\nexport default function ImageToText() {\r\n  const [extractedText, setExtractedText] = useState('');\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = async () => {\r\n        const imageBase64 = reader.result;\r\n        const result = await Tesseract.recognize(imageBase64, 'eng');\r\n        const text = result.data.text;\r\n\r\n        setExtractedText(text);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Image to Text Converter</h1>\r\n      <div className=\"my-3\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n        />\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={(event) => {\r\n            setExtractedText('Generating text...');\r\n            handleImageUpload(event);\r\n          }}\r\n        >\r\n          Generate Text\r\n        </button>A\r\n\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <h2>Extracted Text</h2>\r\n        <p>{extractedText || 'No text extracted'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,YAAY;QAC1B,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAAM;QACjC,MAAMA,MAAM,GAAG,MAAMhB,SAAS,CAACiB,SAAS,CAACF,WAAW,EAAE,KAAK,CAAC;QAC5D,MAAMG,IAAI,GAAGF,MAAM,CAACG,IAAI,CAACD,IAAI;QAE7BZ,gBAAgB,CAACY,IAAI,CAAC;MACxB,CAAC;MACDN,MAAM,CAACQ,aAAa,CAACX,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,oBACEP,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAAoB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCxB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBpB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAEtB;MAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBpB,OAAA;QACEmB,SAAS,EAAC,iBAAiB;QAC3BS,OAAO,EAAGtB,KAAK,IAAK;UAClBF,gBAAgB,CAAC,oBAAoB,CAAC;UACtCC,iBAAiB,CAACC,KAAK,CAAC;QAC1B,CAAE;QAAAc,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAEX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBpB,OAAA;QAAAoB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBxB,OAAA;QAAAoB,QAAA,EAAIjB,aAAa,IAAI;MAAmB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA/CuBD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}