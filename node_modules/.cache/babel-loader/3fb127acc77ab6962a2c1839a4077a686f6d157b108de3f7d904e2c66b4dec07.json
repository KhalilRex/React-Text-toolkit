{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert('Light mode has been enabled', 'success');\n      // document.title = 'ChtutoPack - Light Mode'\n    } else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#483D8B';\n      document.body.style.color = 'white';\n      showAlert('dark mode has been enabled', 'success');\n      // document.title = 'ChtutoPack - dark Mode'\n    }\n  };\n\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this)\n  }]);\n  ReactDOM.createRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"ChutoPack\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter Your Text Below\",\n        alert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"WlalXKKVB2ixg2xroWjK9uMGeNU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","color","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","ReactDOM","createRoot","getElementById","render","React","StrictMode","children","title","className","heading","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/react/my-app/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode]=useState('dark');\n  const [alert, setAlert]=useState(null);\n\n  const showAlert = (message , type) => {\n     setAlert({\n      msg:message,\n      type:type\n     })\n     setTimeout(() => {\n         setAlert(null)\n     }, 3000);\n  }\n  const toggleMode = () => {\n     if(mode === 'dark'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert('Light mode has been enabled', 'success')\n      // document.title = 'ChtutoPack - Light Mode'\n     }\n     else{\n      setMode('dark')\n      document.body.style.backgroundColor = '#483D8B'\n      document.body.style.color = 'white';\n      showAlert('dark mode has been enabled', 'success')\n      // document.title = 'ChtutoPack - dark Mode'\n\n     }\n  }\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <About />,\n    },\n  ]);\n  ReactDOM.createRoot(document.getElementById(\"root\")).render(\n    <React.StrictMode>\n      <RouterProvider router={router} />\n    </React.StrictMode>\n  );\n  \n  return (\n    <>\n    <Navbar title=\"ChutoPack\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter Your Text Below\"  alert={showAlert}/>\n    \n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}